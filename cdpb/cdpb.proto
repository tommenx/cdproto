syntax = "proto3";
package cdpb;

option go_package="github.com/tommenx/cdproto/cdpb";

import "base.proto";


//存储设备的类型
enum StorageType {
    NVM = 0;
    SSD = 1;
    HDD = 2;
}
//资源的种类
enum ResourceType {
    ReadBps = 0;
    ReadIops = 1;
    WriteBps = 2;
    WriteIops = 3;
    StorageSpace = 4;
}

message Resource {
    ResourceType resource_type = 1;
    int64 size = 2;
}


message NodeStorage {
    string node_name = 1;
    repeated Storage storage = 2;
}

//对于存储资源的单位默认为G
//对于磁盘的默认单位为MB
message Storage {
    string name = 1; // volume group name
    StorageType storage_type = 2; // 底层存储的种类
    map<string, Resource> resource = 3; //隔离的种类:数值
}

message PodResource {
    string name = 1;
    string namespace = 2;
    string node = 3;
    map<string, Resource> request_resource = 4;
}

message Volume {
    string name = 1; // pv的名字
    string volume_group = 2; // 卷组vg的名字，对应Storage中的name
    string uuid = 3; // 对应id
    string maj = 4; // 主设备号
    string min = 5; // 副设备号
    string logical_volume = 6; // 对于的逻辑卷的名字
}

message PutNodeStorageRequest {
    NodeStorage node = 1;
    base.Base base = 255;
}
message PutNodeStorageResponse {
    base.BaseResp base_resp = 255;
}

message GetNodeStorageRequest {
    base.Base base = 255;
}

message GetNodeStorageResponse {
    map<string, NodeStorage> node_map = 1;
    base.BaseResp base_resp = 255;
}

message PutPodResourceRequest {
    PodResource pod = 1;
    base.Base base = 255;
}

message PutPodResourceResponse {
    base.BaseResp base_resp = 255;
}

message PutVolumeRequest {
    Volume volume = 1;
    base.Base base = 255;
}

message PutVolumeResponse {
    base.BaseResp base_resp = 255;
}

service Coordinator {
    rpc PutNodeStorage (PutNodeStorageRequest) returns (PutNodeStorageResponse);
    rpc GetNodeStorage (GetNodeStorageRequest) returns (GetNodeStorageResponse);
    rpc PutPodResource (PutPodResourceRequest) returns (PutPodResourceResponse);
    rpc PutVolume (PutVolumeRequest) returns (PutVolumeResponse);
}










